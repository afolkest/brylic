[project]
name = "rlic"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "ClÃ©ment Robert", email = "cr52@protonmail.com" }
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=2.0.0",
]

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[dependency-groups]
covcheck = [
    {include-group = "test"},
    "coverage[toml]>=7.6.1 ; python_version < '3.11'",
    "coverage>=7.6.1 ; python_version >= '3.11'",
]
test = [
    "pytest>=8.1.0",
]
typecheck = [
    "mypy>=1.13.0",
    "pyright>=1.1.391",
]

[tool.maturin]
module-name = "rlic._core"
python-packages = ["rlic"]
python-source = "src"

[tool.pytest.ini_options]
filterwarnings = [
  "error",
]
xfail_strict = true

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    # a more strict default pragma
    "\\# pragma: no cover\\b",

    # allow defensive code
    "^\\s*raise NotImplementedError\\b",

    # typing-related code
    "^if TYPE_CHECKING:",
    ": \\.\\.\\.(\\s*#.*)?$",
    "^ +\\.\\.\\.$",
    "-> ['\"]?NoReturn['\"]?:",
]

[tool.ruff.lint]
ignore = ["E501", "D101"]
select = [
    "E",
    "F",
    "W",
    #"D",   # pydocstyle
    "C4",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "TCH", # flake8-type-checking
    "YTT", # flake8-2020
    "I",   # isort
    "UP",  # pyupgrade
    "NPY", # numpy specific rules
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["gpgi"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
